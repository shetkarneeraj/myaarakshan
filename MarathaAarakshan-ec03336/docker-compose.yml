version: '3.8'

services:
  # Maratha Aarakshan Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: maratha_aarakshan_web
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - FLASK_APP=wsgi:application
      - PYTHONPATH=/app
    volumes:
      - ./instance:/app/instance
      - ./logs:/app/logs
      - static_files:/app/static
    networks:
      - maratha_network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: maratha_aarakshan_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_files:/var/www/maratha_aarakshan/static:ro
      - ./ssl:/etc/ssl/certs:ro
    networks:
      - maratha_network
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session storage
  redis:
    image: redis:alpine
    container_name: maratha_aarakshan_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-marathapass123}"
    volumes:
      - redis_data:/data
    networks:
      - maratha_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: maratha_aarakshan_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - maratha_network
    profiles:
      - monitoring

  # Grafana for metrics visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: maratha_aarakshan_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - maratha_network
    profiles:
      - monitoring

# Networks
networks:
  maratha_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  static_files:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
